{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","placeholder","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","useFetchGifs","GifExpertApp","categories","cat","ReactDOM","render","document","getElementById"],"mappings":"mMAkCeA,EAhCY,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OAEI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAOlB,SACI,uBACIO,YAAY,wBACZC,KAAK,OACLC,MAAOV,EACPW,SApBc,SAACR,GACvBF,EAAcE,EAAES,OAAOF,a,+BCLlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,gEAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARvB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEjC,OACI,sBAAKc,UAAU,oEAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCJHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SACtB,ECFwB,SAACA,GACzB,MAA0Bf,mBAAS,CAC/BsB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAXAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAAAd,GACFY,EAAS,CACLf,KAAMG,EACNU,SAAS,SAGtB,CAACpB,IAGGqB,EDdmBI,CAAazB,GAA/BO,EAAR,EAAQA,KAAMa,EAAd,EAAcA,QAId,OACI,qCACI,+BAAKpB,EAAL,OACCoB,GAAW,mBAAGJ,UAAU,sBAAb,qBAEZ,qBAAKA,UAAU,YAAf,SAGQT,EAAKE,KAAI,SAACC,GACN,OAAO,cAAC,EAAD,eAA+BA,GAAbA,EAAIC,aEmBtCe,EA7Ba,WACxB,MAAoCzC,mBAAS,CAAC,KAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAMA,OACI,qCACI,oBAAIgC,UAAU,yCAAd,gCACA,cAAC,EAAD,CAAahC,cAAeA,IAC5B,uBACA,6BAEQ2C,EAAWlB,KAAI,SAAAmB,GACX,OAAO,cAAC,EAAD,CAAmB5B,SAAU4B,GAAfA,Y,MCjB7CC,IAASC,OACP,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.7e40ede4.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\nexport const AddCategory = ({ setCategories }) => {\r\n    const [inputValue, setInputValue] = useState(\"\")\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setInputValue('')\r\n        }\r\n        return;\r\n\r\n    }\r\n    return (\r\n\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                placeholder='Introduce tu busqueda'\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default AddCategory;","export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=100&api_key=rQnKasBHPOdgcj9yKfAab61bpsmxcTzr`\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n\r\n\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__lightSpeedInRight animate__faster\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem'\r\nexport const GifGrid = ({ category }) => {\r\n    const { data, loading } = useFetchGifs(category);\r\n\r\n\r\n    // getGifs();\r\n    return (\r\n        <>\r\n            <h3>{category} </h3>\r\n            {loading && <p className=\"animate__backInLeft\">Loading</p>}\r\n\r\n            <div className=\"card-grid\">\r\n\r\n                {\r\n                    data.map((img) => {\r\n                        return <GifGridItem key={img.id}  {...img} />\r\n                    })\r\n                }\r\n\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(img => {\r\n                setstate({\r\n                    data: img,\r\n                    loading: false,\r\n                })\r\n            })\r\n    }, [category])\r\n\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react';\r\n\r\n// const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\nimport AddCategory from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n    const [categories, setCategories] = useState(['']);\r\n    // const handleAdd = () => {\r\n    //     // setCategories(['naruto', ...categories]);\r\n    //     //Otra forma , tener en cuenta que el setCategorie recibe un callback\r\n    //     setCategories(cats => [...cats, 'sasuke'])\r\n    // }\r\n    return (\r\n        <>\r\n            <h2 className=\"animate__animated animate__slideInDown\">GifExpertApp-React</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n            <ol>\r\n                {\r\n                    categories.map(cat => {\r\n                        return <GifGrid key={cat} category={cat} />\r\n                    }\r\n                    )\r\n                }\r\n            </ol>\r\n\r\n\r\n        </>\r\n\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />, document.getElementById('root')\n\n);\n\n"],"sourceRoot":""}